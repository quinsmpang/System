import { DigitShapes } from './types';
import { Constructor, ICloneable } from '@typescript-standard-library/core/Source/types';
export declare class NumberFormatInfo implements ICloneable<NumberFormatInfo> {
    static readonly currentInfo: NumberFormatInfo;
    static readonly invariantInfo: NumberFormatInfo;
    static readOnly(formatInfo: NumberFormatInfo): NumberFormatInfo;
    currencyDecimalDigits: number;
    currencyDecimalSeparator: string;
    currencyGroupSeparator: string;
    currencyGroupSizes: number[];
    currencyNegativePattern: string;
    currencyPositivePattern: string;
    currencySymbol: string;
    digitSubstitution: DigitShapes;
    nanSymbol: string;
    nativeDigits: string[];
    negativeInfinitySymbol: string;
    negativeSign: string;
    numberDecimalDigits: number;
    numberDecimalSeparator: string;
    numberGroupSeparator: string;
    numberGroupSizes: number[];
    numberNegativePattern: string;
    percentDecimalDigits: number;
    percentDecimalSeparator: string;
    percentGroupSeparator: string;
    percentGroupSizes: number[];
    percentNegativePattern: string;
    percentPositivePattern: string;
    percentSymbol: string;
    perMilleSymbol: string;
    positiveInfinitySymbol: string;
    positiveSign: string;
    private _isReadOnly;
    readonly isReadOnly: boolean;
    constructor(formatInfo?: NumberFormatInfo);
    clone(): NumberFormatInfo;
    getFormat(type: Constructor<any>): object;
}
